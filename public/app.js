/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/gl-matrix/esm/common.js":
/*!**********************************************!*\
  !*** ./node_modules/gl-matrix/esm/common.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ARRAY_TYPE\": () => (/* binding */ ARRAY_TYPE),\n/* harmony export */   \"EPSILON\": () => (/* binding */ EPSILON),\n/* harmony export */   \"RANDOM\": () => (/* binding */ RANDOM),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"setMatrixArrayType\": () => (/* binding */ setMatrixArrayType),\n/* harmony export */   \"toRadian\": () => (/* binding */ toRadian)\n/* harmony export */ });\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\n//# sourceURL=webpack://webraytracer/./node_modules/gl-matrix/esm/common.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"adjoint\": () => (/* binding */ adjoint),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"determinant\": () => (/* binding */ determinant),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"frob\": () => (/* binding */ frob),\n/* harmony export */   \"fromQuat\": () => (/* binding */ fromQuat),\n/* harmony export */   \"fromQuat2\": () => (/* binding */ fromQuat2),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromRotationTranslation\": () => (/* binding */ fromRotationTranslation),\n/* harmony export */   \"fromRotationTranslationScale\": () => (/* binding */ fromRotationTranslationScale),\n/* harmony export */   \"fromRotationTranslationScaleOrigin\": () => (/* binding */ fromRotationTranslationScaleOrigin),\n/* harmony export */   \"fromScaling\": () => (/* binding */ fromScaling),\n/* harmony export */   \"fromTranslation\": () => (/* binding */ fromTranslation),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"fromXRotation\": () => (/* binding */ fromXRotation),\n/* harmony export */   \"fromYRotation\": () => (/* binding */ fromYRotation),\n/* harmony export */   \"fromZRotation\": () => (/* binding */ fromZRotation),\n/* harmony export */   \"frustum\": () => (/* binding */ frustum),\n/* harmony export */   \"getRotation\": () => (/* binding */ getRotation),\n/* harmony export */   \"getScaling\": () => (/* binding */ getScaling),\n/* harmony export */   \"getTranslation\": () => (/* binding */ getTranslation),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"lookAt\": () => (/* binding */ lookAt),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"multiplyScalarAndAdd\": () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   \"ortho\": () => (/* binding */ ortho),\n/* harmony export */   \"orthoNO\": () => (/* binding */ orthoNO),\n/* harmony export */   \"orthoZO\": () => (/* binding */ orthoZO),\n/* harmony export */   \"perspective\": () => (/* binding */ perspective),\n/* harmony export */   \"perspectiveFromFieldOfView\": () => (/* binding */ perspectiveFromFieldOfView),\n/* harmony export */   \"perspectiveNO\": () => (/* binding */ perspectiveNO),\n/* harmony export */   \"perspectiveZO\": () => (/* binding */ perspectiveZO),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"targetTo\": () => (/* binding */ targetTo),\n/* harmony export */   \"translate\": () => (/* binding */ translate),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nvar perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nvar ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack://webraytracer/./node_modules/gl-matrix/esm/mat4.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec2.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec2.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"angle\": () => (/* binding */ angle),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"transformMat2\": () => (/* binding */ transformMat2),\n/* harmony export */   \"transformMat2d\": () => (/* binding */ transformMat2d),\n/* harmony export */   \"transformMat3\": () => (/* binding */ transformMat3),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"zero\": () => (/* binding */ zero)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nfunction fromValues(x, y) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack://webraytracer/./node_modules/gl-matrix/esm/vec2.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"angle\": () => (/* binding */ angle),\n/* harmony export */   \"bezier\": () => (/* binding */ bezier),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"hermite\": () => (/* binding */ hermite),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"transformMat3\": () => (/* binding */ transformMat3),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"transformQuat\": () => (/* binding */ transformQuat),\n/* harmony export */   \"zero\": () => (/* binding */ zero)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nfunction fromValues(x, y, z) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack://webraytracer/./node_modules/gl-matrix/esm/vec3.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"transformQuat\": () => (/* binding */ transformQuat),\n/* harmony export */   \"zero\": () => (/* binding */ zero)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nfunction fromValues(x, y, z, w) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack://webraytracer/./node_modules/gl-matrix/esm/vec4.js?");

/***/ }),

/***/ "./node_modules/stats.js/build/stats.min.js":
/*!**************************************************!*\
  !*** ./node_modules/stats.js/build/stats.min.js ***!
  \**************************************************/
/***/ (function(module) {

eval("// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){ true?module.exports=e():0})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n\n\n//# sourceURL=webpack://webraytracer/./node_modules/stats.js/build/stats.min.js?");

/***/ }),

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _application__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application */ \"./src/application.ts\");\n\r\nlet application = new _application__WEBPACK_IMPORTED_MODULE_0__.Application();\r\n// main application the browser runs\r\nwindow.onload = () => {\r\n    application.start();\r\n};\r\nwindow.onresize = () => {\r\n    // renderer.resize();\r\n};\r\n\n\n//# sourceURL=webpack://webraytracer/./src/app.ts?");

/***/ }),

/***/ "./src/application.ts":
/*!****************************!*\
  !*** ./src/application.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Application\": () => (/* binding */ Application)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec4.js\");\n/* harmony import */ var _scene_camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scene/camera */ \"./src/scene/camera.ts\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderer */ \"./src/renderer.ts\");\n/* harmony import */ var _scene_scene__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scene/scene */ \"./src/scene/scene.ts\");\n/* harmony import */ var stats_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! stats.js */ \"./node_modules/stats.js/build/stats.min.js\");\n/* harmony import */ var stats_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(stats_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ui_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui/ui */ \"./src/ui/ui.ts\");\n/* harmony import */ var _objects_objects__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./objects/objects */ \"./src/objects/objects.ts\");\n/* harmony import */ var _ui_input__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ui/input */ \"./src/ui/input.ts\");\n/* harmony import */ var _objects_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./objects/material */ \"./src/objects/material.ts\");\n/* harmony import */ var _ui_settingsButton__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ui/settingsButton */ \"./src/ui/settingsButton.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Application {\r\n    constructor() {\r\n        var _a, _b;\r\n        let container = document.getElementById(\"raytracer\");\r\n        if (container == null)\r\n            throw new Error(`HTML element with id 'raytracer' not found`);\r\n        this._appContainer = container;\r\n        this._appContainer.style.display = \"flex\";\r\n        this._renderer = new _renderer__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this._appContainer);\r\n        this._stats = new (stats_js__WEBPACK_IMPORTED_MODULE_3___default())();\r\n        this._stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\r\n        this._camera = new _scene_camera__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({ position: gl_matrix__WEBPACK_IMPORTED_MODULE_9__.fromValues(-0.5, 1, 3) });\r\n        this._camera.rotateY(-0.33);\r\n        this._scene = new _scene_scene__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\r\n            lightDir: gl_matrix__WEBPACK_IMPORTED_MODULE_9__.fromValues(0.35, 0.76, 0.5),\r\n            backgroundColor: gl_matrix__WEBPACK_IMPORTED_MODULE_10__.fromValues(Math.random(), Math.random(), Math.random(), 1),\r\n        });\r\n        this._ui = new _ui_ui__WEBPACK_IMPORTED_MODULE_4__.UserInterface(this._appContainer);\r\n        this._input = new _ui_input__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this);\r\n        this._stats.dom.style.position = \"relative\";\r\n        this._stats.dom.style.zIndex = \"100\";\r\n        (_a = document.getElementById(\"raytracer\")) === null || _a === void 0 ? void 0 : _a.appendChild(this._stats.dom);\r\n        let optionButton = new _ui_settingsButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this._ui).dom;\r\n        (_b = document.getElementById(\"raytracer\")) === null || _b === void 0 ? void 0 : _b.appendChild(optionButton);\r\n        // Add a sphere\r\n        this._scene.addObject(new _objects_objects__WEBPACK_IMPORTED_MODULE_5__.Sphere({\r\n            position: gl_matrix__WEBPACK_IMPORTED_MODULE_9__.fromValues(0.5, -1, -1),\r\n            radius: 0.5,\r\n            material: new _objects_material__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\r\n                baseColor: gl_matrix__WEBPACK_IMPORTED_MODULE_10__.fromValues(Math.random(), Math.random(), Math.random(), 1),\r\n                roughness: Math.random(),\r\n                metallic: Math.random()\r\n            })\r\n        }));\r\n        // Add a cube\r\n        this._scene.addObject(new _objects_objects__WEBPACK_IMPORTED_MODULE_5__.Cube({\r\n            position: gl_matrix__WEBPACK_IMPORTED_MODULE_9__.fromValues(-0.55, -0.28, 0),\r\n            size: 0.5,\r\n            material: new _objects_material__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\r\n                baseColor: gl_matrix__WEBPACK_IMPORTED_MODULE_10__.fromValues(Math.random(), Math.random(), Math.random(), 1),\r\n                roughness: Math.random(),\r\n                metallic: Math.random()\r\n            })\r\n        }));\r\n        // Add a plane\r\n        this._scene.addObject(new _objects_objects__WEBPACK_IMPORTED_MODULE_5__.Plane({\r\n            size: 4,\r\n            material: new _objects_material__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\r\n                baseColor: gl_matrix__WEBPACK_IMPORTED_MODULE_10__.fromValues(Math.random(), Math.random(), Math.random(), 1),\r\n                roughness: Math.random(),\r\n                metallic: Math.random()\r\n            })\r\n        }));\r\n    }\r\n    start() {\r\n        this._renderer.start(this._scene, this._camera);\r\n        this._ui.start(this._renderer);\r\n        this._input.start();\r\n        this.update();\r\n    }\r\n    update() {\r\n        this._stats.begin();\r\n        this._renderer.render();\r\n        this._stats.end();\r\n        requestAnimationFrame(this.update.bind(this));\r\n    }\r\n    get renderer() { return this._renderer; }\r\n    get camera() { return this._camera; }\r\n    get scene() { return this._scene; }\r\n    get ui() { return this._ui; }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/application.ts?");

/***/ }),

/***/ "./src/objects/material.ts":
/*!*********************************!*\
  !*** ./src/objects/material.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Material)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\r\nclass Material {\r\n    constructor({ baseColor = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(1, 1, 1, 1), roughness = 0.5, metallic = 0.5 }) {\r\n        this.baseColor = baseColor;\r\n        this.roughness = roughness;\r\n        this.metallic = metallic;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/objects/material.ts?");

/***/ }),

/***/ "./src/objects/objects.ts":
/*!********************************!*\
  !*** ./src/objects/objects.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Circle\": () => (/* reexport safe */ _planes_circle__WEBPACK_IMPORTED_MODULE_1__.Circle),\n/* harmony export */   \"Cube\": () => (/* reexport safe */ _volumes_cube__WEBPACK_IMPORTED_MODULE_2__.Cube),\n/* harmony export */   \"Plane\": () => (/* reexport safe */ _planes_plane__WEBPACK_IMPORTED_MODULE_0__.Plane),\n/* harmony export */   \"Sphere\": () => (/* reexport safe */ _volumes_sphere__WEBPACK_IMPORTED_MODULE_3__.Sphere)\n/* harmony export */ });\n/* harmony import */ var _planes_plane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./planes/plane */ \"./src/objects/planes/plane.ts\");\n/* harmony import */ var _planes_circle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./planes/circle */ \"./src/objects/planes/circle.ts\");\n/* harmony import */ var _volumes_cube__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./volumes/cube */ \"./src/objects/volumes/cube.ts\");\n/* harmony import */ var _volumes_sphere__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./volumes/sphere */ \"./src/objects/volumes/sphere.ts\");\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://webraytracer/./src/objects/objects.ts?");

/***/ }),

/***/ "./src/objects/planes/circle.ts":
/*!**************************************!*\
  !*** ./src/objects/planes/circle.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Circle\": () => (/* binding */ Circle)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var _renderObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../renderObject */ \"./src/objects/renderObject.ts\");\n\r\n\r\nclass Circle extends _renderObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(parameters = {}) {\r\n        var _a;\r\n        super(parameters, 'circle');\r\n        this._radius = (_a = parameters.radius) !== null && _a !== void 0 ? _a : 0.5;\r\n        this._normal = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.fromValues(0, 0, 1);\r\n    }\r\n    get radius() { return this._radius; }\r\n    set radius(value) { this._radius = value; }\r\n    getIntersection(ray, intersection) {\r\n        const nd = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(this._normal, ray.direction);\r\n        if (Math.abs(nd) < 1e-6)\r\n            return;\r\n        const t = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(), this.position, ray.origin), this._normal) / nd;\r\n        if (t < 0)\r\n            return;\r\n        const p = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.scaleAndAdd(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(), ray.origin, ray.direction, t);\r\n        const dist = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.length(gl_matrix__WEBPACK_IMPORTED_MODULE_2__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create(), gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(p[0], p[1]), gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(this.position[0], this.position[1])));\r\n        if (dist <= this.radius && (intersection.closestObject === null || t < intersection.hitDistance)) {\r\n            intersection.closestObject = this;\r\n            intersection.hitDistance = t;\r\n        }\r\n    }\r\n    getNormalAtPoint(point) {\r\n        return gl_matrix__WEBPACK_IMPORTED_MODULE_1__.negate(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(), this._normal);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/objects/planes/circle.ts?");

/***/ }),

/***/ "./src/objects/planes/plane.ts":
/*!*************************************!*\
  !*** ./src/objects/planes/plane.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Plane\": () => (/* binding */ Plane)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _renderObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../renderObject */ \"./src/objects/renderObject.ts\");\n\r\n\r\nclass Plane extends _renderObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(parameters = {}) {\r\n        var _a;\r\n        super(parameters, 'plane');\r\n        this._size = (_a = parameters.size) !== null && _a !== void 0 ? _a : 0.5;\r\n        this._uMin = -this._size;\r\n        this._uMax = this._size;\r\n        this._vMin = -this._size;\r\n        this._vMax = this._size;\r\n        this._normal = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.fromValues(0, 1, 0);\r\n        this._tangent = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.fromValues(1, 0, 0);\r\n        this._bitangent = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.fromValues(0, 0, 1);\r\n    }\r\n    get size() { return this._size; }\r\n    set size(value) {\r\n        this._size = value;\r\n        this._uMin = -value;\r\n        this._uMax = value;\r\n        this._vMin = -value;\r\n        this._vMax = value;\r\n    }\r\n    getIntersection(ray, intersection) {\r\n        let closestDistance = Number.MAX_VALUE;\r\n        let origin = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(), ray.origin, this.position);\r\n        let denom = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(this._normal, ray.direction);\r\n        if (denom > 0.0001) {\r\n            let p0l0 = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_1__.sub(p0l0, this.position, origin);\r\n            closestDistance = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(p0l0, this._normal) / denom;\r\n            if (closestDistance < intersection.hitDistance) {\r\n                let hitPoint = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_1__.scaleAndAdd(hitPoint, origin, ray.direction, closestDistance);\r\n                let u = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(hitPoint, this._tangent);\r\n                let v = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(hitPoint, this._bitangent);\r\n                if (u >= this._uMin && u <= this._uMax && v >= this._vMin && v <= this._vMax) {\r\n                    intersection.hitDistance = closestDistance;\r\n                    intersection.closestObject = this;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getNormalAtPoint(point) {\r\n        return gl_matrix__WEBPACK_IMPORTED_MODULE_1__.negate(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(), this._normal);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/objects/planes/plane.ts?");

/***/ }),

/***/ "./src/objects/renderObject.ts":
/*!*************************************!*\
  !*** ./src/objects/renderObject.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RenderObject)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./material */ \"./src/objects/material.ts\");\n\r\n\r\nclass RenderObject {\r\n    constructor(parameters = {}, type) {\r\n        var _a, _b;\r\n        this._position = (_a = parameters.position) !== null && _a !== void 0 ? _a : gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this._material = (_b = parameters.material) !== null && _b !== void 0 ? _b : new _material__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({});\r\n        this._type = type;\r\n    }\r\n    get position() { return this._position; }\r\n    set position(value) { this._position = value; }\r\n    get material() { return this._material; }\r\n    set material(value) { this._material = value; }\r\n    get type() { return this._type; }\r\n    getIntersection(ray, intersection) { }\r\n    getNormalAtPoint(point) { return gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(); }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/objects/renderObject.ts?");

/***/ }),

/***/ "./src/objects/volumes/cube.ts":
/*!*************************************!*\
  !*** ./src/objects/volumes/cube.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Cube\": () => (/* binding */ Cube)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _renderObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../renderObject */ \"./src/objects/renderObject.ts\");\n\r\n\r\nclass Cube extends _renderObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(parameters = {}) {\r\n        var _a;\r\n        super(parameters, 'cube');\r\n        this._min = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this._max = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this._size = (_a = parameters.size) !== null && _a !== void 0 ? _a : 0.5;\r\n        this._min = this.calcMin();\r\n        this._max = this.calcMax();\r\n    }\r\n    get size() { return this._size; }\r\n    set size(value) {\r\n        this._size = value;\r\n        this._min = this.calcMin();\r\n        this._max = this.calcMax();\r\n    }\r\n    get min() { return this._min; }\r\n    get max() { return this._max; }\r\n    calcMin() {\r\n        return gl_matrix__WEBPACK_IMPORTED_MODULE_1__.add(this._min, this.position, gl_matrix__WEBPACK_IMPORTED_MODULE_1__.fromValues(-this._size, -this._size, -this._size));\r\n    }\r\n    calcMax() {\r\n        return gl_matrix__WEBPACK_IMPORTED_MODULE_1__.add(this._max, this.position, gl_matrix__WEBPACK_IMPORTED_MODULE_1__.fromValues(this._size, this._size, this._size));\r\n    }\r\n    getIntersection(ray, intersection) {\r\n        let origin = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(), ray.origin, this.position);\r\n        let tmin = (this.min[0] - origin[0]) / ray.direction[0];\r\n        let tmax = (this.max[0] - origin[0]) / ray.direction[0];\r\n        if (tmin > tmax) {\r\n            let temp = tmin;\r\n            tmin = tmax;\r\n            tmax = temp;\r\n        }\r\n        let tymin = (this.min[1] - origin[1]) / ray.direction[1];\r\n        let tymax = (this.max[1] - origin[1]) / ray.direction[1];\r\n        if (tymin > tymax) {\r\n            let temp = tymin;\r\n            tymin = tymax;\r\n            tymax = temp;\r\n        }\r\n        if ((tmin > tymax) || (tymin > tmax))\r\n            return;\r\n        if (tymin > tmin)\r\n            tmin = tymin;\r\n        if (tymax < tmax)\r\n            tmax = tymax;\r\n        let tzmin = (this.min[2] - origin[2]) / ray.direction[2];\r\n        let tzmax = (this.max[2] - origin[2]) / ray.direction[2];\r\n        if (tzmin > tzmax) {\r\n            let temp = tzmin;\r\n            tzmin = tzmax;\r\n            tzmax = temp;\r\n        }\r\n        if ((tmin > tzmax) || (tzmin > tmax))\r\n            return;\r\n        if (tzmin > tmin)\r\n            tmin = tzmin;\r\n        if (tzmax < tmax)\r\n            tmax = tzmax;\r\n        if (tmin < intersection.hitDistance && tmin > 0.0) {\r\n            intersection.hitDistance = tmin;\r\n            intersection.closestObject = this;\r\n        }\r\n    }\r\n    getNormalAtPoint(point) {\r\n        let normal = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        let min = this.min;\r\n        let max = this.max;\r\n        if (point[0] === min[0])\r\n            normal[0] = -1;\r\n        else if (point[0] === max[0])\r\n            normal[0] = 1;\r\n        if (point[1] === min[1])\r\n            normal[1] = -1;\r\n        else if (point[1] === max[1])\r\n            normal[1] = 1;\r\n        if (point[2] === min[2])\r\n            normal[2] = -1;\r\n        else if (point[2] === max[2])\r\n            normal[2] = 1;\r\n        return normal;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/objects/volumes/cube.ts?");

/***/ }),

/***/ "./src/objects/volumes/sphere.ts":
/*!***************************************!*\
  !*** ./src/objects/volumes/sphere.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Sphere\": () => (/* binding */ Sphere)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _renderObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../renderObject */ \"./src/objects/renderObject.ts\");\n\r\n\r\nclass Sphere extends _renderObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(parameters = {}) {\r\n        var _a;\r\n        super(parameters, 'sphere');\r\n        this._radius = (_a = parameters.radius) !== null && _a !== void 0 ? _a : 0.5;\r\n    }\r\n    get radius() { return this._radius; }\r\n    set radius(value) { this._radius = value; }\r\n    getIntersection(ray, intersection) {\r\n        let closestDistance = Number.MAX_VALUE;\r\n        let origin = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(), ray.origin, this.position);\r\n        let a = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(ray.direction, ray.direction);\r\n        let b = 2.0 * gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(origin, ray.direction);\r\n        let c = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.dot(origin, origin) - this.radius * this.radius;\r\n        let d = b * b - 4.0 * a * c;\r\n        if (d < 0.0)\r\n            return;\r\n        closestDistance = (-b - Math.sqrt(d)) / (2.0 * a);\r\n        if (closestDistance < intersection.hitDistance && closestDistance > 0.0) {\r\n            intersection.hitDistance = closestDistance;\r\n            intersection.closestObject = this;\r\n        }\r\n    }\r\n    getNormalAtPoint(point) {\r\n        return point;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/objects/volumes/sphere.ts?");

/***/ }),

/***/ "./src/ray/hitData.ts":
/*!****************************!*\
  !*** ./src/ray/hitData.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HitData)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n\r\nclass HitData {\r\n    constructor() {\r\n        this.distance = -1;\r\n        this.worldPosition = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n        this.worldNormal = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n        this.objectIndex = Number.MAX_VALUE;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/ray/hitData.ts?");

/***/ }),

/***/ "./src/ray/ray.ts":
/*!************************!*\
  !*** ./src/ray/ray.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Ray)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n\r\nclass Ray {\r\n    constructor(origin, direction) {\r\n        this.origin = origin ? origin : gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n        this.direction = direction ? direction : gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/ray/ray.ts?");

/***/ }),

/***/ "./src/renderer.ts":
/*!*************************!*\
  !*** ./src/renderer.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _ray_ray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ray/ray */ \"./src/ray/ray.ts\");\n/* harmony import */ var _ray_hitData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ray/hitData */ \"./src/ray/hitData.ts\");\n\r\n\r\n\r\nclass Renderer {\r\n    constructor(appContainer) {\r\n        this._frameIndex = 1;\r\n        this._accumulationBuffer = [];\r\n        this._width = 480;\r\n        this._height = 360;\r\n        this._bias = 1e-8;\r\n        this._clearColor = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(0, 0, 0, 1);\r\n        this._bounceLimit = 2;\r\n        this._previousBounceLimit = this._bounceLimit;\r\n        this._lastUpdate = 0;\r\n        this.shadowBias = 0.02;\r\n        this.updateInterval = 10;\r\n        this._accumulate = true;\r\n        this.diffuseLighting = true;\r\n        this.directionalShadows = true;\r\n        this.reflections = true;\r\n        this.ambientOcclusion = false;\r\n        this._renderTarget = document.createElement(\"canvas\");\r\n        this._renderContext = this._renderTarget.getContext(\"2d\");\r\n        this._renderTarget.width = this._width;\r\n        this._renderTarget.height = this._height;\r\n        // Creates empty image data of the size of the canvas\r\n        this._image = this._renderContext.createImageData(this._renderTarget.width, this._renderTarget.height);\r\n        // Set the canvas to be behind the UI\r\n        this._renderTarget.style.position = \"absolute\";\r\n        this._renderTarget.style.zIndex = \"-1\";\r\n        appContainer.appendChild(this._renderTarget);\r\n        appContainer.style.width = `${this._width}px`;\r\n        // Array containing color data for each pixel [r_0, g_0, b_0, a_0, r_1, g_1, ... , a_width*height*4-1]\r\n        this._rgbBuffer = new Uint8ClampedArray(this._renderTarget.width * this._renderTarget.height * 4);\r\n        // Prevents the context menu from appearing when right clicking on the canvas\r\n        this._renderTarget.addEventListener(\"contextmenu\", (e) => {\r\n            e.preventDefault();\r\n        });\r\n    }\r\n    start(scene, camera) {\r\n        camera.setHeightAndWidth(this._renderTarget.height, this._renderTarget.width);\r\n        this._scene = scene;\r\n        this._scene.renderer = this;\r\n        this._camera = camera;\r\n    }\r\n    render() {\r\n        this._lastUpdate++;\r\n        if (this._lastUpdate % this.updateInterval !== 0 && this.updateInterval !== 0)\r\n            return;\r\n        else\r\n            this._bounceLimit = this._previousBounceLimit;\r\n        if (this._frameIndex === 1) {\r\n            this._accumulationBuffer = new Array(this._renderTarget.width * this._renderTarget.height);\r\n            for (let i = 0; i < this._accumulationBuffer.length; i++)\r\n                this._accumulationBuffer[i] = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(0, 0, 0, 1);\r\n        }\r\n        for (let y = 0; y < this._renderTarget.height; y++) {\r\n            for (let x = 0; x < this._renderTarget.width; x++) {\r\n                // skip some pixels to speed up rendering when camera is moving\r\n                if (this._camera.isMoving && (x % 2 == 0 || y % 2 == 0 || x % 3 == 0 || y % 3 == 0)) {\r\n                    this._rgbBuffer[(x + y * this._renderTarget.width) * 4] = this._clearColor[0] * 255;\r\n                    this._rgbBuffer[(x + y * this._renderTarget.width) * 4 + 1] = this._clearColor[1] * 255;\r\n                    this._rgbBuffer[(x + y * this._renderTarget.width) * 4 + 2] = this._clearColor[2] * 255;\r\n                    this._rgbBuffer[(x + y * this._renderTarget.width) * 4 + 3] = this._clearColor[3] * 255;\r\n                    continue;\r\n                }\r\n                let color = this.rayGen(x, y);\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.add(this._accumulationBuffer[x + y * this._renderTarget.width], this._accumulationBuffer[x + y * this._renderTarget.width], color);\r\n                let accumulatedColor = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.clone(this._accumulationBuffer[x + y * this._renderTarget.width]);\r\n                if (this.accumulate)\r\n                    gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scale(accumulatedColor, accumulatedColor, 1 / this._frameIndex);\r\n                //clamp accumulatedColor\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.min(accumulatedColor, accumulatedColor, gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(1, 1, 1, 1));\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.max(accumulatedColor, accumulatedColor, gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create());\r\n                let index = (x + y * this._renderTarget.width) * 4;\r\n                this._rgbBuffer[index] = accumulatedColor[0] * 255;\r\n                this._rgbBuffer[index + 1] = accumulatedColor[1] * 255;\r\n                this._rgbBuffer[index + 2] = accumulatedColor[2] * 255;\r\n                this._rgbBuffer[index + 3] = accumulatedColor[3] * 255;\r\n            }\r\n        }\r\n        this.uploadBuffer();\r\n        if (this._camera.isMoving) {\r\n            this._bounceLimit = 1;\r\n            this.resetFrameIndex();\r\n        }\r\n    }\r\n    uploadBuffer() {\r\n        // Copies the data from the rgb buffer to the image buffer\r\n        this._image.data.set(this._rgbBuffer);\r\n        // Puts the image data on the canvas\r\n        this._renderContext.putImageData(this._image, 0, 0);\r\n        if (this.accumulate)\r\n            this._frameIndex++;\r\n        else\r\n            this.resetFrameIndex();\r\n    }\r\n    rayGen(x, y) {\r\n        let ray = new _ray_ray__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n        ray.origin = this._camera.position;\r\n        ray.direction = this._camera.rayDirections[x + y * this._renderTarget.width];\r\n        let finalColor = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        let reflectiveFactor = 1;\r\n        for (let i = 0; i < this._bounceLimit; i++) {\r\n            let hitData = this.traceRay(ray);\r\n            if (hitData.distance < 0) {\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scaleAndAdd(finalColor, finalColor, this._scene.backgroundColor, reflectiveFactor);\r\n                break;\r\n            }\r\n            let color = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n            if (!this.diffuseLighting) {\r\n                finalColor = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(1, 1, 1, 1);\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scaleAndAdd(finalColor, finalColor, color, reflectiveFactor);\r\n            }\r\n            else {\r\n                let diffuse = Math.max(this._scene.ambientLight, gl_matrix__WEBPACK_IMPORTED_MODULE_3__.dot(hitData.worldNormal, gl_matrix__WEBPACK_IMPORTED_MODULE_3__.negate(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), this._scene.directionalLight.direction)));\r\n                let object = this._scene.objects[hitData.objectIndex];\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.copy(color, object.material.baseColor);\r\n                color[0] *= diffuse;\r\n                color[1] *= diffuse;\r\n                color[2] *= diffuse;\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scaleAndAdd(finalColor, finalColor, color, reflectiveFactor);\r\n            }\r\n            if (this.ambientOcclusion && !this._camera.isMoving) {\r\n                // ambient occlusion\r\n                let occlusion = 0;\r\n                const numSamples = 8;\r\n                const sampleRadius = 0.2;\r\n                const sampleOffset = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create();\r\n                const occlusionRay = new _ray_ray__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n                for (let j = 0; j < numSamples; j++) {\r\n                    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.random(sampleOffset, sampleRadius);\r\n                    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.add(sampleOffset, sampleOffset, hitData.worldPosition);\r\n                    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.sub(occlusionRay.direction, sampleOffset, hitData.worldPosition);\r\n                    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.normalize(occlusionRay.direction, occlusionRay.direction);\r\n                    gl_matrix__WEBPACK_IMPORTED_MODULE_3__.scaleAndAdd(occlusionRay.origin, hitData.worldPosition, hitData.worldNormal, this._bias);\r\n                    const occlusionHitData = this.traceRay(occlusionRay);\r\n                    if (occlusionHitData.distance > 0.001 && occlusionHitData.distance < gl_matrix__WEBPACK_IMPORTED_MODULE_3__.distance(sampleOffset, hitData.worldPosition)) {\r\n                        occlusion += 1.0;\r\n                    }\r\n                }\r\n                occlusion /= numSamples;\r\n                const occlusionFactor = 0.4;\r\n                finalColor[0] -= occlusion * occlusionFactor;\r\n                finalColor[1] -= occlusion * occlusionFactor;\r\n                finalColor[2] -= occlusion * occlusionFactor;\r\n            }\r\n            if (this.directionalShadows && !this._camera.isMoving) {\r\n                // calculate shadow\r\n                let shadowRay = new _ray_ray__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n                shadowRay.origin = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.scaleAndAdd(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), hitData.worldPosition, hitData.worldNormal, this._bias);\r\n                // shador ray direction with random offset to artificially soften shadows\r\n                let randomOffset = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create();\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_3__.random(randomOffset, this.shadowBias);\r\n                shadowRay.direction = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), this._scene.directionalLight.direction, randomOffset);\r\n                shadowRay.direction = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.negate(shadowRay.direction, shadowRay.direction);\r\n                let shadowHitData = this.traceRay(shadowRay);\r\n                if (shadowHitData.distance > 0.007) {\r\n                    let shadowFactor = 0.5 * reflectiveFactor;\r\n                    finalColor[0] -= shadowFactor;\r\n                    finalColor[1] -= shadowFactor;\r\n                    finalColor[2] -= shadowFactor;\r\n                }\r\n            }\r\n            if (this.reflections && this._bounceLimit > 1) {\r\n                let objectMaterial = this._scene.objects[hitData.objectIndex].material;\r\n                reflectiveFactor *= objectMaterial.metallic;\r\n                ray.origin = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.scaleAndAdd(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), hitData.worldPosition, hitData.worldNormal, this._bias);\r\n                let reflectionOffset = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.fromValues((Math.random() * (-0.25) + Math.random() * 0.25) * objectMaterial.roughness, (Math.random() * (-0.25) + Math.random() * 0.25) * objectMaterial.roughness, (Math.random() * (-0.25) + Math.random() * 0.25) * objectMaterial.roughness);\r\n                let offsetWorldNormal = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), hitData.worldNormal, reflectionOffset);\r\n                let reflectionDir = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), ray.direction, gl_matrix__WEBPACK_IMPORTED_MODULE_3__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), offsetWorldNormal, 2 * gl_matrix__WEBPACK_IMPORTED_MODULE_3__.dot(offsetWorldNormal, ray.direction)));\r\n                ray.direction = reflectionDir;\r\n            }\r\n        }\r\n        return finalColor;\r\n    }\r\n    closestHit(ray, objectIndex, hitDistance) {\r\n        const hitData = new _ray_hitData__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n        hitData.distance = hitDistance;\r\n        hitData.objectIndex = objectIndex;\r\n        const closestObject = this._scene.objects[objectIndex];\r\n        let origin = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), ray.origin, closestObject.position);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_3__.scaleAndAdd(hitData.worldPosition, origin, ray.direction, hitDistance);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_3__.normalize(hitData.worldNormal, closestObject.getNormalAtPoint(hitData.worldPosition));\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_3__.add(hitData.worldPosition, hitData.worldPosition, closestObject.position);\r\n        return hitData;\r\n    }\r\n    miss(ray) {\r\n        return new _ray_hitData__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    }\r\n    traceRay(ray) {\r\n        let previousIntersection = {\r\n            closestObject: null,\r\n            hitDistance: Number.MAX_VALUE\r\n        };\r\n        for (let object of this._scene.objects)\r\n            object.getIntersection(ray, previousIntersection);\r\n        if (previousIntersection.closestObject == null)\r\n            return this.miss(ray);\r\n        return this.closestHit(ray, this._scene.objects.indexOf(previousIntersection.closestObject), previousIntersection.hitDistance);\r\n    }\r\n    castScreenRay(x, y) {\r\n        let ray = new _ray_ray__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n        ray.origin = this._camera.position;\r\n        ray.direction = this._camera.getRayDirection(x, y);\r\n        let hitData = this.traceRay(ray);\r\n        if (hitData.objectIndex == -1)\r\n            return null;\r\n        return this._scene.objects[hitData.objectIndex];\r\n    }\r\n    resetFrameIndex() { this._frameIndex = 1; }\r\n    get renderTarget() { return this._renderTarget; }\r\n    get scene() { return this._scene; }\r\n    get bounceLimit() { return this._bounceLimit; }\r\n    set bounceLimit(value) {\r\n        this._previousBounceLimit = value;\r\n        this._bounceLimit = value;\r\n    }\r\n    get accumulate() { return this._accumulate; }\r\n    set accumulate(value) { this._accumulate = value; this.resetFrameIndex(); }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/renderer.ts?");

/***/ }),

/***/ "./src/scene/camera.ts":
/*!*****************************!*\
  !*** ./src/scene/camera.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Camera)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\r\nclass Camera {\r\n    constructor({ position = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(0, 0, 2), rotation = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(0, 0, 0), fov = 45, near = 0.1, far = 100 }) {\r\n        this._projection = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this._inverseProjection = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this._view = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this._inverseView = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this._isMoving = false;\r\n        // Caches\r\n        this._forward_pos = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n        this._target = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this._normalized = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n        this._fixed = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this._inverted = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this._rayDirection = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n        this._position = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.negate(gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create(), position);\r\n        this._rotation = rotation;\r\n        this._fov = fov;\r\n        this._near = near;\r\n        this._far = far;\r\n        this._forward = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(0, 0, 1);\r\n        this._rayDirections = [];\r\n    }\r\n    update() {\r\n        this.calculateForward();\r\n        this.calculateProjection();\r\n        this.calculateView();\r\n        this.calculateRayDirections();\r\n    }\r\n    calculateProjection() {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_1__.perspective(this._projection, this._fov, this._width / this._height, this._near, this._far);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_1__.invert(this._inverseProjection, this._projection);\r\n    }\r\n    calculateView() {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_1__.lookAt(this._view, this._position, gl_matrix__WEBPACK_IMPORTED_MODULE_0__.add(this._forward_pos, this._position, this._forward), gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(0, 1, 0));\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_1__.invert(this._inverseView, this._view);\r\n    }\r\n    moveForward(distance) {\r\n        this._position = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.add(this._position, this._position, gl_matrix__WEBPACK_IMPORTED_MODULE_0__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create(), this._forward, distance));\r\n    }\r\n    moveRight(distance) {\r\n        const right = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.cross(gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create(), this._forward, gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(0, 1, 0));\r\n        this._position = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.add(this._position, this._position, gl_matrix__WEBPACK_IMPORTED_MODULE_0__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create(), right, distance));\r\n    }\r\n    moveUp(distance) {\r\n        this._position = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.add(this._position, this._position, gl_matrix__WEBPACK_IMPORTED_MODULE_0__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create(), gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(0, 1, 0), distance));\r\n    }\r\n    rotateY(rate) {\r\n        this._rotation[1] += rate;\r\n        this.update();\r\n    }\r\n    rotateX(rate) {\r\n        this._rotation[0] += rate;\r\n        this.update();\r\n    }\r\n    calculateForward() {\r\n        this._forward = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(Math.sin(this._rotation[1]) * Math.cos(this._rotation[0]), Math.sin(this._rotation[0]), Math.cos(this._rotation[1]) * Math.cos(this._rotation[0]));\r\n    }\r\n    calculateRayDirections() {\r\n        this._rayDirections = [];\r\n        for (let y = 0; y < this._height; y++) {\r\n            for (let x = 0; x < this._width; x++) {\r\n                const coord = [x / this._width, y / this._height];\r\n                coord[0] = coord[0] * 2.0 - 1.0;\r\n                coord[1] = coord[1] * 2.0 - 1.0;\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transformMat4(this._target, [coord[0], coord[1], 1, 1], this._inverseProjection);\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_0__.normalize(this._normalized, gl_matrix__WEBPACK_IMPORTED_MODULE_0__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create(), gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(this._target[0], this._target[1], this._target[2]), 1 / this._target[3]));\r\n                this._fixed = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(this._normalized[0], this._normalized[1], this._normalized[2], 0);\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.transformMat4(this._inverted, this._fixed, this._inverseView);\r\n                this._rayDirection = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(this._inverted[0], this._inverted[1], this._inverted[2]);\r\n                // Cache ray directions\r\n                this._rayDirections[x + y * this._width] = this._rayDirection;\r\n            }\r\n        }\r\n    }\r\n    getRayDirection(x, y) {\r\n        return this._rayDirections[x + y * this._width];\r\n    }\r\n    get rayDirections() { return this._rayDirections; }\r\n    get position() { return this._position; }\r\n    get rotation() { return this._rotation; }\r\n    get height() { return this._height; }\r\n    get width() { return this._width; }\r\n    get isMoving() { return this._isMoving; }\r\n    set isMoving(value) { this._isMoving = value; }\r\n    setHeightAndWidth(height, width) {\r\n        this._height = height;\r\n        this._width = width;\r\n        this.update();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/scene/camera.ts?");

/***/ }),

/***/ "./src/scene/directionalLight.ts":
/*!***************************************!*\
  !*** ./src/scene/directionalLight.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DirectionalLight)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n\r\nclass DirectionalLight {\r\n    constructor(direction) {\r\n        this._phi = 0;\r\n        this._theta = 0;\r\n        this._direction = direction || gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(0, 1, 0);\r\n    }\r\n    get direction() { return this._direction; }\r\n    set direction(value) { this._direction = value; }\r\n    get phi() { return this._phi; }\r\n    set phi(value) {\r\n        this._phi = value;\r\n        this.updateDirection();\r\n    }\r\n    get theta() { return this._theta; }\r\n    set theta(value) {\r\n        this._theta = value;\r\n        this.updateDirection();\r\n    }\r\n    updateDirection() {\r\n        this._direction[0] = Math.cos(this._phi) * Math.sin(this._theta);\r\n        this._direction[1] = Math.cos(this._theta);\r\n        this._direction[2] = Math.sin(this._phi) * Math.sin(this._theta);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/scene/directionalLight.ts?");

/***/ }),

/***/ "./src/scene/scene.ts":
/*!****************************!*\
  !*** ./src/scene/scene.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Scene)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./src/utils.ts\");\n/* harmony import */ var _directionalLight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directionalLight */ \"./src/scene/directionalLight.ts\");\n\r\n\r\n\r\nclass Scene {\r\n    constructor({ lightDir = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(0, 1, 0), ambientLight = 0.1, backgroundColor = _utils__WEBPACK_IMPORTED_MODULE_0__.COLORS.BLACK }) {\r\n        this._objects = [];\r\n        this._directionalLight = new _directionalLight__WEBPACK_IMPORTED_MODULE_1__[\"default\"](lightDir);\r\n        this._ambientLight = ambientLight;\r\n        this._backgroundColor = backgroundColor;\r\n    }\r\n    get objects() { return this._objects; }\r\n    get directionalLight() { return this._directionalLight; }\r\n    get ambientLight() { return this._ambientLight; }\r\n    set ambientLight(value) { this._ambientLight = value; }\r\n    get backgroundColor() { return this._backgroundColor; }\r\n    set backgroundColor(value) { this._backgroundColor = value; }\r\n    addObject(object) {\r\n        this._objects.push(object);\r\n    }\r\n    removeObject(index) {\r\n        if (index !== -1)\r\n            this._objects.splice(index, 1);\r\n    }\r\n    get renderer() { return this._renderer; }\r\n    set renderer(renderer) { this._renderer = renderer; }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/scene/scene.ts?");

/***/ }),

/***/ "./src/ui/input.ts":
/*!*************************!*\
  !*** ./src/ui/input.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Input)\n/* harmony export */ });\nclass Input {\r\n    constructor(app) {\r\n        this._app = app;\r\n        this._inputTarget = this._app.renderer.renderTarget;\r\n        this._selectedObject = null;\r\n    }\r\n    start() {\r\n        this._inputTarget.addEventListener(\"mousedown\", (e) => {\r\n            let object = this._app.renderer.castScreenRay(e.offsetX, e.offsetY);\r\n            this._selectedObject = object;\r\n            if (object)\r\n                this._app.ui.setSelectedObject(object);\r\n        });\r\n        // Move position on mouse move and clicking\r\n        this._inputTarget.addEventListener(\"mousemove\", (e) => {\r\n            if (!this._app.camera)\r\n                return;\r\n            switch (e.buttons) {\r\n                case 1:\r\n                    this._app.camera.moveForward(-e.movementY / 100);\r\n                    this._app.camera.moveRight(e.movementX / 100);\r\n                    this._app.camera.isMoving = true;\r\n                    this._app.renderer.resetFrameIndex();\r\n                    break;\r\n                case 2:\r\n                    this._app.camera.rotateY(-e.movementX / 500);\r\n                    this._app.camera.rotateX(e.movementY / 500);\r\n                    this._app.camera.isMoving = true;\r\n                    this._app.renderer.resetFrameIndex();\r\n                    break;\r\n                case 3:\r\n                    this._app.camera.moveUp(e.movementY / 100);\r\n                    this._app.camera.moveRight(e.movementX / 100);\r\n                    this._app.camera.isMoving = true;\r\n                    this._app.renderer.resetFrameIndex();\r\n                    break;\r\n                default:\r\n                    this._app.camera.isMoving = false;\r\n                    break;\r\n            }\r\n        });\r\n        // Zoom on mouse wheel\r\n        this._inputTarget.addEventListener(\"wheel\", (e) => {\r\n            if (!this._app.camera)\r\n                return;\r\n            this._app.camera.moveForward(-e.deltaY / 500);\r\n        });\r\n        // Keyboard Inputs\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            if (!this._selectedObject)\r\n                return;\r\n            this._app.renderer.resetFrameIndex();\r\n            switch (e.key) {\r\n                // WASDQE\r\n                case \"w\":\r\n                    this._selectedObject.position[1] -= 0.1;\r\n                    break;\r\n                case \"a\":\r\n                    this._selectedObject.position[0] += 0.1;\r\n                    break;\r\n                case \"s\":\r\n                    this._selectedObject.position[1] += 0.1;\r\n                    break;\r\n                case \"d\":\r\n                    this._selectedObject.position[0] -= 0.1;\r\n                    break;\r\n                case \"q\":\r\n                    this._selectedObject.position[2] += 0.1;\r\n                    break;\r\n                case \"e\":\r\n                    this._selectedObject.position[2] -= 0.1;\r\n                    break;\r\n                // DELETE\r\n                case \"Delete\":\r\n                    let index = this._app.scene.objects.indexOf(this._selectedObject);\r\n                    this._app.scene.removeObject(index);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/ui/input.ts?");

/***/ }),

/***/ "./src/ui/settingsButton.ts":
/*!**********************************!*\
  !*** ./src/ui/settingsButton.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SettingsButton)\n/* harmony export */ });\nclass SettingsButton {\r\n    constructor(ui) {\r\n        const optionButton = document.createElement(\"button\");\r\n        optionButton.innerText = \"⚙️\";\r\n        optionButton.style.position = \"relative\";\r\n        optionButton.style.zIndex = \"100\";\r\n        optionButton.style.margin = \"10px\";\r\n        optionButton.style.padding = \"5px\";\r\n        optionButton.style.fontSize = \"20px\";\r\n        optionButton.style.backgroundColor = \"white\";\r\n        optionButton.style.border = \"1px solid black\";\r\n        optionButton.style.borderRadius = \"50px\";\r\n        optionButton.style.cursor = \"pointer\";\r\n        optionButton.style.userSelect = \"none\";\r\n        optionButton.addEventListener(\"click\", () => {\r\n            ui.toggle();\r\n        });\r\n        this._dom = optionButton;\r\n    }\r\n    get dom() { return this._dom; }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/ui/settingsButton.ts?");

/***/ }),

/***/ "./src/ui/ui.ts":
/*!**********************!*\
  !*** ./src/ui/ui.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UserInterface\": () => (/* binding */ UserInterface)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./src/utils.ts\");\n/* harmony import */ var _objects_objects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../objects/objects */ \"./src/objects/objects.ts\");\n\r\n\r\nclass UserInterface {\r\n    constructor(appContainer) {\r\n        this._appContainer = appContainer;\r\n        const uiContainer = document.createElement(\"div\");\r\n        uiContainer.id = \"ui-container\";\r\n        uiContainer.style.backgroundColor = \"#333333\";\r\n        uiContainer.style.color = \"white\";\r\n        uiContainer.style.fontFamily = \"sans-serif\";\r\n        uiContainer.style.fontSize = \"12px\";\r\n        uiContainer.style.fontWeight = \"bold\";\r\n        uiContainer.style.textShadow = \"0px 0px 1px black\";\r\n        uiContainer.style.padding = \"10px\";\r\n        uiContainer.style.position = \"fixed\";\r\n        uiContainer.style.left = appContainer.offsetWidth + \"px\";\r\n        uiContainer.style.width = \"150px\";\r\n        uiContainer.style.zIndex = \"100\";\r\n        uiContainer.style.display = \"none\";\r\n        this._dom = uiContainer;\r\n        this._appContainer.appendChild(uiContainer);\r\n    }\r\n    toggle() {\r\n        if (this._dom.style.display === \"none\")\r\n            this._dom.style.display = \"block\";\r\n        else\r\n            this._dom.style.display = \"none\";\r\n    }\r\n    start(renderer) {\r\n        this._renderer = renderer;\r\n        this._scene = renderer.scene;\r\n        this.setUpRenderSettings();\r\n        this.setUpDirectionalLight();\r\n        this.setUpBackgroundColor();\r\n        this.setUpAddButtons();\r\n        let selectedObjectContainer = document.createElement(\"selected-object-container\");\r\n        selectedObjectContainer.id = \"selected-object-container\";\r\n        this._dom.appendChild(selectedObjectContainer);\r\n    }\r\n    setSelectedObject(object) {\r\n        var _a, _b;\r\n        if (document.getElementById(\"selected-object\") !== null)\r\n            (_a = document.getElementById(\"selected-object\")) === null || _a === void 0 ? void 0 : _a.remove();\r\n        let currentSelectedObjectContainer = document.createElement(\"selected-object\");\r\n        currentSelectedObjectContainer.id = \"selected-object\";\r\n        if (object === null)\r\n            return;\r\n        let index = this._scene.objects.indexOf(object);\r\n        switch (object.type) {\r\n            case \"sphere\":\r\n                currentSelectedObjectContainer.appendChild(this.setUpSphere(index));\r\n                break;\r\n            case \"cube\":\r\n                currentSelectedObjectContainer.appendChild(this.setUpCube(index));\r\n                break;\r\n            case \"plane\":\r\n                currentSelectedObjectContainer.appendChild(this.setUpPlane(index));\r\n                break;\r\n            case \"circle\":\r\n                currentSelectedObjectContainer.appendChild(this.setUpCircle(index));\r\n                break;\r\n        }\r\n        this._appContainer.appendChild(currentSelectedObjectContainer);\r\n        (_b = document.getElementById(\"selected-object-container\")) === null || _b === void 0 ? void 0 : _b.appendChild(currentSelectedObjectContainer);\r\n    }\r\n    setUpRenderSettings() {\r\n        this.setupLayers();\r\n        this.setUpUpdateInterval();\r\n        this.setUpMaxBounces();\r\n        this.setUpShadowBias();\r\n    }\r\n    setupLayers() {\r\n        const layersContainer = document.createElement(\"div\");\r\n        layersContainer.id = \"layers-container\";\r\n        const layersLabel = document.createElement(\"label\");\r\n        layersLabel.htmlFor = \"layers-container\";\r\n        layersLabel.innerText = \"Layers: \";\r\n        layersContainer.appendChild(layersLabel);\r\n        layersContainer.appendChild(document.createElement(\"br\"));\r\n        const material = document.createElement(\"input\");\r\n        material.id = \"material\";\r\n        material.type = \"checkbox\";\r\n        material.checked = this._renderer.diffuseLighting;\r\n        material.addEventListener(\"input\", (e) => {\r\n            this._renderer.diffuseLighting = e.target.checked;\r\n        });\r\n        const materialLabel = document.createElement(\"label\");\r\n        materialLabel.innerText = \"Material\";\r\n        layersContainer.appendChild(material);\r\n        layersContainer.appendChild(materialLabel);\r\n        layersContainer.appendChild(document.createElement(\"br\"));\r\n        const shadowsInput = document.createElement(\"input\");\r\n        shadowsInput.id = \"shadows\";\r\n        shadowsInput.type = \"checkbox\";\r\n        shadowsInput.checked = this._renderer.directionalShadows;\r\n        shadowsInput.addEventListener(\"input\", (e) => {\r\n            this._renderer.directionalShadows = e.target.checked;\r\n        });\r\n        const shadowsLabel = document.createElement(\"label\");\r\n        shadowsLabel.htmlFor = \"shadows\";\r\n        shadowsLabel.innerText = \"Shadows\";\r\n        layersContainer.appendChild(shadowsInput);\r\n        layersContainer.appendChild(shadowsLabel);\r\n        layersContainer.appendChild(document.createElement(\"br\"));\r\n        const reflectionsInput = document.createElement(\"input\");\r\n        reflectionsInput.id = \"reflections\";\r\n        reflectionsInput.type = \"checkbox\";\r\n        reflectionsInput.checked = this._renderer.reflections;\r\n        reflectionsInput.addEventListener(\"input\", (e) => {\r\n            this._renderer.reflections = e.target.checked;\r\n        });\r\n        const reflectionsLabel = document.createElement(\"label\");\r\n        reflectionsLabel.htmlFor = \"reflections\";\r\n        reflectionsLabel.innerText = \"Reflections\";\r\n        layersContainer.appendChild(reflectionsInput);\r\n        layersContainer.appendChild(reflectionsLabel);\r\n        layersContainer.appendChild(document.createElement(\"br\"));\r\n        const aoInput = document.createElement(\"input\");\r\n        aoInput.id = \"ao\";\r\n        aoInput.type = \"checkbox\";\r\n        aoInput.checked = this._renderer.ambientOcclusion;\r\n        aoInput.addEventListener(\"input\", (e) => {\r\n            this._renderer.ambientOcclusion = e.target.checked;\r\n        });\r\n        const aoLabel = document.createElement(\"label\");\r\n        aoLabel.htmlFor = \"ao\";\r\n        aoLabel.innerText = \"Ambient Occlusion\";\r\n        layersContainer.appendChild(aoInput);\r\n        layersContainer.appendChild(aoLabel);\r\n        layersContainer.appendChild(document.createElement(\"br\"));\r\n        const accumulation = document.createElement(\"input\");\r\n        accumulation.id = \"acctumulation\";\r\n        accumulation.type = \"checkbox\";\r\n        accumulation.checked = this._renderer.accumulate;\r\n        accumulation.addEventListener(\"input\", (e) => {\r\n            this._renderer.accumulate = e.target.checked;\r\n        });\r\n        const accumulationLabel = document.createElement(\"label\");\r\n        accumulationLabel.htmlFor = \"acctumulation\";\r\n        accumulationLabel.innerText = \"Accumulation\";\r\n        layersContainer.appendChild(accumulation);\r\n        layersContainer.appendChild(accumulationLabel);\r\n        layersContainer.appendChild(document.createElement(\"br\"));\r\n        const resetAccumulation = document.createElement(\"button\");\r\n        resetAccumulation.innerText = \"Reset Accumulation\";\r\n        resetAccumulation.addEventListener(\"click\", () => {\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        layersContainer.appendChild(resetAccumulation);\r\n        this._dom.appendChild(layersContainer);\r\n    }\r\n    setUpUpdateInterval() {\r\n        const updateIntervalContainer = document.createElement(\"div\");\r\n        updateIntervalContainer.id = \"update-interval-container\";\r\n        const updateIntervalLabel = document.createElement(\"label\");\r\n        updateIntervalLabel.htmlFor = \"updateInterval\";\r\n        updateIntervalLabel.innerText = \"Skip Frames\";\r\n        updateIntervalContainer.appendChild(updateIntervalLabel);\r\n        const updateIntervalInput = document.createElement(\"input\");\r\n        updateIntervalInput.id = \"updateInterval\";\r\n        updateIntervalInput.type = \"number\";\r\n        updateIntervalInput.min = \"0\";\r\n        updateIntervalInput.max = \"60\";\r\n        updateIntervalInput.value = this._renderer.updateInterval.toString();\r\n        updateIntervalInput.addEventListener(\"input\", (e) => {\r\n            this._renderer.updateInterval = e.target.valueAsNumber;\r\n        });\r\n        updateIntervalContainer.appendChild(updateIntervalInput);\r\n        this._dom.appendChild(updateIntervalContainer);\r\n    }\r\n    setUpMaxBounces() {\r\n        const maxBouncesContainer = document.createElement(\"div\");\r\n        maxBouncesContainer.id = \"max-bounces-container\";\r\n        const maxBouncesLabel = document.createElement(\"label\");\r\n        maxBouncesLabel.htmlFor = \"maxBounces\";\r\n        maxBouncesLabel.innerText = \"Max Bounces\";\r\n        maxBouncesContainer.appendChild(maxBouncesLabel);\r\n        const maxBouncesInput = document.createElement(\"input\");\r\n        maxBouncesInput.id = \"maxBounces\";\r\n        maxBouncesInput.type = \"number\";\r\n        maxBouncesInput.min = \"0\";\r\n        maxBouncesInput.max = \"3\";\r\n        maxBouncesInput.value = this._renderer.bounceLimit.toString();\r\n        maxBouncesInput.addEventListener(\"input\", (e) => {\r\n            this._renderer.bounceLimit = e.target.valueAsNumber;\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        maxBouncesContainer.appendChild(maxBouncesInput);\r\n        this._dom.appendChild(maxBouncesContainer);\r\n    }\r\n    setUpShadowBias() {\r\n        const shadowBiasContainer = document.createElement(\"div\");\r\n        shadowBiasContainer.id = \"shadow-bias-container\";\r\n        const shadowBiasLabel = document.createElement(\"label\");\r\n        shadowBiasLabel.htmlFor = \"shadowBias\";\r\n        shadowBiasLabel.innerText = \"Shadow Bias\";\r\n        shadowBiasContainer.appendChild(shadowBiasLabel);\r\n        const shadowBiasInput = document.createElement(\"input\");\r\n        shadowBiasInput.id = \"shadowBias\";\r\n        shadowBiasInput.type = \"number\";\r\n        shadowBiasInput.min = \"0\";\r\n        shadowBiasInput.max = \"0.2\";\r\n        shadowBiasInput.step = \"0.001\";\r\n        shadowBiasInput.value = this._renderer.shadowBias.toString();\r\n        shadowBiasInput.addEventListener(\"input\", (e) => {\r\n            this._renderer.shadowBias = e.target.valueAsNumber;\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        shadowBiasContainer.appendChild(shadowBiasInput);\r\n        this._dom.appendChild(shadowBiasContainer);\r\n    }\r\n    setUpDirectionalLight() {\r\n        const lightDirContainer = document.createElement(\"div\");\r\n        lightDirContainer.id = \"light-dir-container\";\r\n        lightDirContainer.style.border = \"1px solid black\";\r\n        const lightDirLabel = document.createElement(\"label\");\r\n        lightDirLabel.htmlFor = \"lightDir\";\r\n        lightDirLabel.innerText = \"Light Direction\";\r\n        lightDirContainer.appendChild(lightDirLabel);\r\n        const breakLine = document.createElement(\"br\");\r\n        lightDirContainer.appendChild(breakLine);\r\n        const lightDirXRotation = document.createElement(\"input\");\r\n        lightDirXRotation.id = \"lightDirXRotation\";\r\n        lightDirXRotation.type = \"range\";\r\n        lightDirXRotation.min = \"-180\";\r\n        lightDirXRotation.max = \"180\";\r\n        lightDirXRotation.value = this._scene.directionalLight.theta.toString();\r\n        lightDirXRotation.addEventListener(\"input\", (e) => {\r\n            this._scene.directionalLight.phi = e.target.valueAsNumber * Math.PI / 180;\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        const lightDirYRotation = document.createElement(\"input\");\r\n        lightDirYRotation.id = \"lightDirYRotation\";\r\n        lightDirYRotation.type = \"range\";\r\n        lightDirYRotation.min = \"-90\";\r\n        lightDirYRotation.max = \"90\";\r\n        lightDirYRotation.value = this._scene.directionalLight.theta.toString();\r\n        lightDirYRotation.addEventListener(\"input\", (e) => {\r\n            this._scene.directionalLight.theta = e.target.valueAsNumber * Math.PI / 180;\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        lightDirContainer.appendChild(lightDirXRotation);\r\n        lightDirContainer.appendChild(lightDirYRotation);\r\n        this._dom.appendChild(lightDirContainer);\r\n    }\r\n    setUpBackgroundColor() {\r\n        const bgColorContainer = document.createElement(\"div\");\r\n        bgColorContainer.style.position = \"relative\";\r\n        bgColorContainer.style.border = \"1px solid black\";\r\n        const bgColorLabel = document.createElement(\"label\");\r\n        bgColorLabel.htmlFor = \"bgColor\";\r\n        bgColorLabel.innerText = \"Background Color\";\r\n        bgColorLabel.style.position = \"relative\";\r\n        bgColorLabel.style.top = \"0px\";\r\n        bgColorLabel.style.left = \"0px\";\r\n        bgColorLabel.style.width = \"100%\";\r\n        bgColorLabel.style.textAlign = \"center\";\r\n        bgColorLabel.style.color = \"white\";\r\n        bgColorLabel.style.fontFamily = \"sans-serif\";\r\n        bgColorLabel.style.fontSize = \"12px\";\r\n        bgColorLabel.style.fontWeight = \"bold\";\r\n        bgColorLabel.style.textShadow = \"0px 0px 1px black\";\r\n        bgColorContainer.appendChild(bgColorLabel);\r\n        const bgColorR = document.createElement(\"input\");\r\n        bgColorR.type = \"color\";\r\n        bgColorR.value = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.vec4ToHex)(this._scene.backgroundColor);\r\n        bgColorR.style.width = \"100%\";\r\n        bgColorR.addEventListener(\"input\", (e) => {\r\n            this._scene.backgroundColor = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.hexToVec4)(e.target.value);\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        bgColorContainer.appendChild(bgColorR);\r\n        this._dom.appendChild(bgColorContainer);\r\n    }\r\n    setUpAddButtons() {\r\n        let objectsContainer = document.createElement(\"div\");\r\n        const addSphereButton = document.createElement(\"button\");\r\n        addSphereButton.innerText = \"Add Sphere\";\r\n        addSphereButton.addEventListener(\"click\", () => {\r\n            this._scene.addObject(new _objects_objects__WEBPACK_IMPORTED_MODULE_1__.Sphere({ radius: 0.25 }));\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        objectsContainer.appendChild(addSphereButton);\r\n        const addCubeButton = document.createElement(\"button\");\r\n        addCubeButton.innerText = \"Add Cube\";\r\n        addCubeButton.addEventListener(\"click\", () => {\r\n            this._scene.addObject(new _objects_objects__WEBPACK_IMPORTED_MODULE_1__.Cube({ size: 0.25 }));\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        objectsContainer.appendChild(addCubeButton);\r\n        const addPlaneButton = document.createElement(\"button\");\r\n        addPlaneButton.innerText = \"Add Plane\";\r\n        addPlaneButton.addEventListener(\"click\", () => {\r\n            this._scene.addObject(new _objects_objects__WEBPACK_IMPORTED_MODULE_1__.Plane({ size: 0.5 }));\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        objectsContainer.appendChild(addPlaneButton);\r\n        const addCircleButton = document.createElement(\"button\");\r\n        addCircleButton.innerText = \"Add Circle\";\r\n        addCircleButton.addEventListener(\"click\", () => {\r\n            this._scene.addObject(new _objects_objects__WEBPACK_IMPORTED_MODULE_1__.Circle({ radius: 0.5 }));\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        objectsContainer.appendChild(addCircleButton);\r\n        this._dom.appendChild(objectsContainer);\r\n    }\r\n    setUpSphere(index) {\r\n        var _a;\r\n        const sphereContainer = document.createElement(\"div\");\r\n        sphereContainer.style.position = \"relative\";\r\n        sphereContainer.style.border = \"1px solid black\";\r\n        sphereContainer.style.padding = \"5px\";\r\n        const sphereLabel = document.createElement(\"label\");\r\n        sphereLabel.htmlFor = `sphere-${index}`;\r\n        sphereLabel.innerText = `Sphere ${index}`;\r\n        sphereContainer.appendChild(sphereLabel);\r\n        const spherePropertiesContainer = document.createElement(\"div\");\r\n        const sphereRadius = document.createElement(\"input\");\r\n        sphereRadius.type = \"range\";\r\n        sphereRadius.min = \"0\";\r\n        sphereRadius.max = \"1\";\r\n        sphereRadius.step = \"0.01\";\r\n        sphereRadius.value = (_a = this._scene.objects[index].radius) === null || _a === void 0 ? void 0 : _a.toString();\r\n        sphereRadius.style.width = \"100%\";\r\n        sphereRadius.addEventListener(\"input\", (e) => {\r\n            this._scene.objects[index].radius = parseFloat(e.target.value);\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        const sphereRadiusLabel = document.createElement(\"label\");\r\n        sphereRadiusLabel.htmlFor = `sphere-${index}-radius`;\r\n        sphereRadiusLabel.innerText = `Radius`;\r\n        const sphereRadiusContainer = document.createElement(\"div\");\r\n        sphereRadiusContainer.appendChild(sphereRadiusLabel);\r\n        sphereRadiusContainer.appendChild(sphereRadius);\r\n        spherePropertiesContainer.appendChild(sphereRadiusContainer);\r\n        spherePropertiesContainer.appendChild(this.setUpMaterial(index));\r\n        sphereContainer.appendChild(spherePropertiesContainer);\r\n        return sphereContainer;\r\n    }\r\n    setUpCube(index) {\r\n        var _a;\r\n        const cubeContainer = document.createElement(\"div\");\r\n        cubeContainer.style.position = \"relative\";\r\n        cubeContainer.style.border = \"1px solid black\";\r\n        cubeContainer.style.padding = \"5px\";\r\n        const cubeLabel = document.createElement(\"label\");\r\n        cubeLabel.htmlFor = `cube-${index}`;\r\n        cubeLabel.innerText = `Cube ${index}`;\r\n        cubeContainer.appendChild(cubeLabel);\r\n        const cubePropertiesContainer = document.createElement(\"div\");\r\n        const cubeSize = document.createElement(\"input\");\r\n        cubeSize.type = \"range\";\r\n        cubeSize.min = \"0\";\r\n        cubeSize.max = \"1\";\r\n        cubeSize.step = \"0.01\";\r\n        cubeSize.value = (_a = this._scene.objects[index].size) === null || _a === void 0 ? void 0 : _a.toString();\r\n        cubeSize.style.width = \"100%\";\r\n        cubeSize.addEventListener(\"input\", (e) => {\r\n            this._scene.objects[index].size = parseFloat(e.target.value);\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        const cubeSizeLabel = document.createElement(\"label\");\r\n        cubeSizeLabel.htmlFor = `cube-${index}-size`;\r\n        cubeSizeLabel.innerText = `Size`;\r\n        const cubeSizeContainer = document.createElement(\"div\");\r\n        cubeSizeContainer.appendChild(cubeSizeLabel);\r\n        cubeSizeContainer.appendChild(cubeSize);\r\n        cubePropertiesContainer.appendChild(cubeSizeContainer);\r\n        cubePropertiesContainer.appendChild(this.setUpMaterial(index));\r\n        cubeContainer.appendChild(cubePropertiesContainer);\r\n        return cubeContainer;\r\n    }\r\n    setUpPlane(index) {\r\n        var _a;\r\n        const planeContainer = document.createElement(\"div\");\r\n        planeContainer.style.position = \"relative\";\r\n        planeContainer.style.border = \"1px solid black\";\r\n        planeContainer.style.padding = \"5px\";\r\n        const planeLabel = document.createElement(\"label\");\r\n        planeLabel.htmlFor = `plane-${index}`;\r\n        planeLabel.innerText = `plane ${index}`;\r\n        planeContainer.appendChild(planeLabel);\r\n        const planePropertiesContainer = document.createElement(\"div\");\r\n        const planeSize = document.createElement(\"input\");\r\n        planeSize.type = \"range\";\r\n        planeSize.min = \"0\";\r\n        planeSize.max = \"10\";\r\n        planeSize.step = \"0.5\";\r\n        planeSize.value = (_a = this._scene.objects[index].size) === null || _a === void 0 ? void 0 : _a.toString();\r\n        planeSize.style.width = \"100%\";\r\n        planeSize.addEventListener(\"input\", (e) => {\r\n            this._scene.objects[index].size = parseFloat(e.target.value);\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        const planeSizeLabel = document.createElement(\"label\");\r\n        planeSizeLabel.htmlFor = `plane-${index}-size`;\r\n        planeSizeLabel.innerText = `Size`;\r\n        const planeSizeContainer = document.createElement(\"div\");\r\n        planeSizeContainer.appendChild(planeSizeLabel);\r\n        planeSizeContainer.appendChild(planeSize);\r\n        planePropertiesContainer.appendChild(planeSizeContainer);\r\n        planePropertiesContainer.appendChild(this.setUpMaterial(index));\r\n        planeContainer.appendChild(planePropertiesContainer);\r\n        return planeContainer;\r\n    }\r\n    setUpCircle(index) {\r\n        var _a;\r\n        const circleContainer = document.createElement(\"div\");\r\n        circleContainer.style.position = \"relative\";\r\n        circleContainer.style.border = \"1px solid black\";\r\n        circleContainer.style.padding = \"5px\";\r\n        const circleLabel = document.createElement(\"label\");\r\n        circleLabel.htmlFor = `circle-${index}`;\r\n        circleLabel.innerText = `Circle ${index}`;\r\n        circleContainer.appendChild(circleLabel);\r\n        const circlePropertiesContainer = document.createElement(\"div\");\r\n        const circleRadius = document.createElement(\"input\");\r\n        circleRadius.type = \"range\";\r\n        circleRadius.min = \"0\";\r\n        circleRadius.max = \"1\";\r\n        circleRadius.step = \"0.01\";\r\n        circleRadius.value = (_a = this._scene.objects[index].radius) === null || _a === void 0 ? void 0 : _a.toString();\r\n        circleRadius.style.width = \"100%\";\r\n        circleRadius.addEventListener(\"input\", (e) => {\r\n            this._scene.objects[index].radius = parseFloat(e.target.value);\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        const circleRadiusLabel = document.createElement(\"label\");\r\n        circleRadiusLabel.htmlFor = `circle-${index}-radius`;\r\n        circleRadiusLabel.innerText = `Radius`;\r\n        const circleRadiusContainer = document.createElement(\"div\");\r\n        circleRadiusContainer.appendChild(circleRadiusLabel);\r\n        circleRadiusContainer.appendChild(circleRadius);\r\n        circlePropertiesContainer.appendChild(circleRadiusContainer);\r\n        circlePropertiesContainer.appendChild(this.setUpMaterial(index));\r\n        circleContainer.appendChild(circlePropertiesContainer);\r\n        return circleContainer;\r\n    }\r\n    setUpMaterial(index) {\r\n        const materialContainer = document.createElement(\"div\");\r\n        materialContainer.style.position = \"relative\";\r\n        const materialLabel = document.createElement(\"label\");\r\n        materialLabel.innerText = `Material`;\r\n        materialContainer.appendChild(materialLabel);\r\n        const materialPropertiesContainer = document.createElement(\"div\");\r\n        const materialColor = document.createElement(\"input\");\r\n        materialColor.type = \"color\";\r\n        materialColor.value = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.vec4ToHex)(this._scene.objects[index].material.baseColor);\r\n        materialColor.style.width = \"100%\";\r\n        materialColor.addEventListener(\"input\", (e) => {\r\n            this._scene.objects[index].material.baseColor = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.hexToVec4)(e.target.value);\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        const materialColorLabel = document.createElement(\"label\");\r\n        materialColorLabel.htmlFor = `material-${index}-color`;\r\n        materialColorLabel.innerText = `Color`;\r\n        const materialColorContainer = document.createElement(\"div\");\r\n        materialColorContainer.appendChild(materialColorLabel);\r\n        materialColorContainer.appendChild(materialColor);\r\n        const materialRoughness = document.createElement(\"input\");\r\n        materialRoughness.type = \"range\";\r\n        materialRoughness.min = \"0\";\r\n        materialRoughness.max = \"1\";\r\n        materialRoughness.step = \"0.01\";\r\n        materialRoughness.value = this._scene.objects[index].material.roughness.toString();\r\n        materialRoughness.style.width = \"100%\";\r\n        materialRoughness.addEventListener(\"input\", (e) => {\r\n            this._scene.objects[index].material.roughness = parseFloat(e.target.value);\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        const materialRoughnessLabel = document.createElement(\"label\");\r\n        materialRoughnessLabel.htmlFor = `material-${index}-roughness`;\r\n        materialRoughnessLabel.innerText = `Roughness`;\r\n        const materialRoughnessContainer = document.createElement(\"div\");\r\n        materialRoughnessContainer.appendChild(materialRoughnessLabel);\r\n        materialRoughnessContainer.appendChild(materialRoughness);\r\n        const materialMetallic = document.createElement(\"input\");\r\n        materialMetallic.type = \"range\";\r\n        materialMetallic.min = \"0\";\r\n        materialMetallic.max = \"1\";\r\n        materialMetallic.step = \"0.01\";\r\n        materialMetallic.value = this._scene.objects[index].material.metallic.toString();\r\n        materialMetallic.style.width = \"100%\";\r\n        materialMetallic.addEventListener(\"input\", (e) => {\r\n            this._scene.objects[index].material.metallic = parseFloat(e.target.value);\r\n            this._renderer.resetFrameIndex();\r\n        });\r\n        const materialMetallicLabel = document.createElement(\"label\");\r\n        materialMetallicLabel.htmlFor = `material-${index}-metallic`;\r\n        materialMetallicLabel.innerText = `Metallic`;\r\n        const materialMetallicContainer = document.createElement(\"div\");\r\n        materialMetallicContainer.appendChild(materialMetallicLabel);\r\n        materialMetallicContainer.appendChild(materialMetallic);\r\n        materialPropertiesContainer.appendChild(materialColorContainer);\r\n        materialPropertiesContainer.appendChild(materialRoughnessContainer);\r\n        materialPropertiesContainer.appendChild(materialMetallicContainer);\r\n        materialContainer.appendChild(materialPropertiesContainer);\r\n        return materialContainer;\r\n    }\r\n    get dom() { return this._dom; }\r\n}\r\n\n\n//# sourceURL=webpack://webraytracer/./src/ui/ui.ts?");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"COLORS\": () => (/* binding */ COLORS),\n/* harmony export */   \"hexToVec4\": () => (/* binding */ hexToVec4),\n/* harmony export */   \"vec4ToHex\": () => (/* binding */ vec4ToHex)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\r\nfunction hexToVec4(hex, alpha = 1) {\r\n    let r = parseInt(hex.slice(1, 3), 16) / 255;\r\n    let g = parseInt(hex.slice(3, 5), 16) / 255;\r\n    let b = parseInt(hex.slice(5, 7), 16) / 255;\r\n    return gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(r, g, b, alpha);\r\n}\r\nfunction vec4ToHex(color) {\r\n    const r = Math.floor(color[0] * 255);\r\n    const g = Math.floor(color[1] * 255);\r\n    const b = Math.floor(color[2] * 255);\r\n    const a = Math.floor(color[3] * 255);\r\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n}\r\nvar COLORS;\r\n(function (COLORS) {\r\n    COLORS.RED = [1, 0, 0, 1];\r\n    COLORS.GREEN = [0, 1, 0, 1];\r\n    COLORS.BLUE = [0, 0, 1, 1];\r\n    COLORS.WHITE = [1, 1, 1, 1];\r\n    COLORS.BLACK = [0, 0, 0, 1];\r\n    COLORS.YELLOW = [1, 1, 0, 1];\r\n    COLORS.CYAN = [0, 1, 1, 1];\r\n    COLORS.MAGENTA = [1, 0, 1, 1];\r\n    COLORS.GRAY = [0.5, 0.5, 0.5, 1];\r\n    COLORS.LIGHT_GRAY = [0.75, 0.75, 0.75, 1];\r\n    COLORS.DARK_GRAY = [0.25, 0.25, 0.25, 1];\r\n    COLORS.ORANGE = [1, 0.5, 0, 1];\r\n    COLORS.PURPLE = [0.5, 0, 1, 1];\r\n    COLORS.BROWN = [0.5, 0.25, 0, 1];\r\n    COLORS.PINK = [1, 0.75, 0.8, 1];\r\n})(COLORS || (COLORS = {}));\r\n\n\n//# sourceURL=webpack://webraytracer/./src/utils.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.ts");
/******/ 	
/******/ })()
;